form.addEventListener("submit", async (event) => {
  event.preventDefault();

  const city = input.value;
  if (city) {
    try {
      const weatherData = await getWeatherData(city);
      getWeatherInfo(weatherData);
    } catch (error) {
      console.error(error);
      displayError(error);
    }
  } else {
    displayError("Please enter city");
  }
});

async function getWeatherData(city) {
  const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`;
  const response= await fetch(apiUrl)

  if(!response.ok){
    throw new Error(`Couldn't fetch weather data for this ${city}`)
  }
  return await response.json();
}

function getWeatherInfo(data) {
    console.log(data)
    const {name:city,
        main: {temp, humidity},
        weather:[{description, id}]
    }=data;

    weatherDetails.textContent='';
    weatherDetails.style.display='flex';

    const cityDisplay=document.createElement('h1')
    const tempDisplay=document.createElement('p')
    const humidityDisplay=document.createElement('p')
    const descDisplay=document.createElement('p')
    const weatherEmoji=document.createElement('p')

    cityDisplay.textContent=city
    tempDisplay.textContent=`${(temp-273.15).toFixed(2)}Â°C`
    humidityDisplay.textContent=humidity
    descDisplay.textContent=description
    weatherEmoji.textContent= getWeatherEmoji(id)

    weatherDetails.appendChild(cityDisplay).classList.add
    weatherDetails.appendChild(cityDisplay)
    weatherDetails.appendChild(cityDisplay)
    weatherDetails.appendChild(cityDisplay)
    weatherDetails.appendChild(cityDisplay)
}
function getWeatherEmoji(weatherId) {

}
function displayError(message) {
  const errorMssg = document.createElement("p");
  errorMssg.textContent = message;
  errorMssg.classList.add("error");

  weatherDetails.textContent = "";
  weatherDetails.style.display = "flex";
  weatherDetails.appendChild(errorMssg);
}